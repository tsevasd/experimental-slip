<div class="bg-white rounded-b-3xl p-2" x-show="$store.slipTab.t === 1 && Object.keys(receipt).length > 0">
    <div class="grid grid-cols-2 gap-2 py-2 text-sm text-center">
        <a class="block bg-light-200 rounded-full py-2 cursor-pointer" @@click="receipt = {}">Repeat</a>
        <a class="block bg-brand rounded-full text-light-100 py-2 cursor-pointer" @@click="receipt = {}; model = slip.UI.betslipHandler().model">Continue</a>
    </div>
    <template x-for="abetView in receipt.ErroResponses">
        <div>
            <template x-for="change in abetView.ChangedOdds">
                <div class="mb-2">
                    <span x-text="change.SportEventEventId"></span>
                    <span x-text="change.OddId"></span>
                    <span x-text="change.SpecialBetValueId"></span>
                    <span x-text="change.ErrorStatus"></span>
                    <span x-text="change.ErrorMessage"></span>
                </div>
            </template>
            <div class="p-2 flex items-center justify-center text-xl">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="inline-block w-7 h-7 text-indicator mr-1">
                    <path fill-rule="evenodd" d="M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25zm-1.72 6.97a.75.75 0 10-1.06 1.06L10.94 12l-1.72 1.72a.75.75 0 101.06 1.06L12 13.06l1.72 1.72a.75.75 0 101.06-1.06L13.06 12l1.72-1.72a.75.75 0 10-1.06-1.06L12 10.94l-1.72-1.72z" clip-rule="evenodd" />
                </svg>
                Bet was not accepted
            </div>
            <div class="px-4 pb-2 text-sm text-center">
                <span x-text="`${abetView.ErrorMessage} (${abetView.ErrorCode})`"></span>
                <div x-show="abetView.ErrorCode === -10" class="pt-3 text-xs text-center">
                    <a id="proposalWindow" class="inline-block bg-light-200 rounded-full text-400 py-2 px-4 cursor-pointer">
                        Place Bet Again
                        (<span x-text="common.parse(abetView.RiskManagerResponse.ProposedAmount).output"></span>)
                    </a>
                </div>
            </div>
        </div>
    </template>
    <template x-for="betView in receipt.BetSlips">
        <div>
            <div class="p-2 flex items-center justify-center text-xl">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="inline-block w-7 h-7 text-success mr-1">
                    <path fill-rule="evenodd" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12zm13.36-1.814a.75.75 0 10-1.22-.872l-3.236 4.53L9.53 12.22a.75.75 0 00-1.06 1.06l2.25 2.25a.75.75 0 001.14-.094l3.75-5.25z" clip-rule="evenodd" />
                </svg>
                Your bet was accepted!
            </div>
            <div class="p-2 text-sm">
                <div class="flex items-start">
                    <div class="text-light-400">Bet ref. ID</div>
                    <div class="text-right ml-auto"><span class="font-mono font-bold whitespace-nowrap" x-html="function(){
                        var sortedrefIds = betView.BetSlip.RealBets.map(x => x.Id).sort();
                        if (sortedrefIds.length === 1) {
                            return sortedrefIds[0];
                        } else {
                            var reclngth = betView.BetSlip.RealBets[0].UserId.toString().length;
                            var diff = 10 - reclngth;
                            return sortedrefIds[0].toString().substring(0, sortedrefIds[0].toString().length - (10 - diff)) + 'XXXXXX' + '<br>(' +
                            sortedrefIds[0].toString().substring(10 - diff, 10 - diff + 8) + '-' +
                            sortedrefIds[sortedrefIds.length-1].toString().substring(10 - diff, 10 - diff + 8) + ')';
                        }
                    }"></span> <span class="whitespace-nowrap" x-text="betView.BetSlip.RealBets[0].BetDescription.replace('(', ' (')"></span></div>
                </div>
                <div class="flex items-start">
                    <div class="text-light-400">Date</div>
                    <div class="text-right ml-auto" x-text="common.dateFormat(betView.BetSlip.RealBets[0].AcceptanceDateWithOffset)"></div>
                </div>
            </div>
            @* Events *@
            <div class="mb-3">
                <template x-for="event in betView.BetSlip.SportEventList.sort((a, b) => a.GroupId - b.GroupId).sort((a, b) => { var da = new Date(a.ActualDateTime), db = new Date(b.ActualDateTime); return da-db; }).sort((a, b) => a.SportEventId - b.SportEventId).sort((a, b) => a.WeekOrder - b.WeekOrder).filter(function(item, pos, a) { return a.map(x => x.SportEventId).indexOf(item.SportEventId) === pos; })">
                    <div class="border-b-2 border-light-100 last:border-b-0">
                        <div class="relative pl-1 pt-2">
                            <template x-if="event.IsCustomBet">
                                <div class="mb-2">
                                    <div class="flex items-center -ml-1 bg-light-100 rounded-full">
                                        <div class="pl-2 text-sm text-brand-dark font-bold flex-1 flex items-center">
                                            <span class="bg-brand-dark rounded-full text-light-100 w-5 h-5 text-xxs font-bold inline-flex items-center justify-center mr-1">BB</span>
                                            Bet Builder
                                        </div>
                                        <div>
                                            <a class="inline-block min-w-16 leading-none bg-light-200 rounded-full px-4 py-3 text-sm text-brand-dark font-bold text-right" x-text="common.parse(betView.BetSlip.SlipEventFullDetails.find(s => s.SportEventEventId === event.SportEventEventId).CustomBetOddValue).output"></a>
                                        </div>
                                    </div>
                                </div>
                            </template>
                            <div class="flex relative">@* Auxiliary *@<div x-text="'['+event.SportEventId+']'" class="text-xxxs text-light-200 absolute -top-2 left-0"></div>@* /Auxiliary *@
                                <img class="inline w-4 h-4 mt-0.5 mr-1" :src="`icons/game${event.SlipEventLocalized.Game.Id}.svg`" :title="event.SlipEventLocalized.Game.Name" />
                                <div class="flex flex-wrap leading-tight tracking-tight">
                                    <span class="whitespace-nowrap" x-text="event.SlipEventLocalized.Team1"></span>
                                    <span class="mx-1">-</span>
                                    <span class="whitespace-nowrap" x-text="event.SlipEventLocalized.Team2"></span>
                                    
                                </div>
                            </div>
                            <div class="flex items-end px-1 mt-1 mb-3">
                                <div class="flex-1 text-xs text-light-400 text-ellipsis overflow-hidden whitespace-nowrap" x-text="event.SlipEventLocalized.League.Name" :title="event.SlipEventLocalized.League.Name.length > 30 && event.SlipEventLocalized.League.Name"></div>
                                <div class="text-sm leading-4 text-right" x-text="common.dateFormat(event.EventDateWithOffset, 'short')"></div>
                            </div>
                            <div class="relative">
                                <template x-for="selection in event.SlipEventLocalized.SelectionCollection">
                                    <div class="pl-1 pb-1 border-b-2 border-light-100 mb-1 relative" x-data="{ eventSelection: betView.BetSlip.SlipEventFullDetails.find(s => s.SportEventId === event.SportEventId && s.OddId === selection.OddId) }">
                                        <div class="flex items-end">
                                            <template x-if="`${selection.OddId}_${selection.SpecialBetValueId}_${selection.PlayerId || 0}_${selection.TeamId || 0}` in event.SlipEventLocalized.SelectionCollection">
                                            <div class="flex-1 text-brand-dark" x-data="{ eventLocalizedSelectionCollection: function(){ return `${selection.OddId}_${selection.SpecialBetValueId}_${selection.PlayerId || 0}_${selection.TeamId || 0}` in event.SlipEventLocalized.SelectionCollection ? event.SlipEventLocalized.SelectionCollection[`${selection.OddId}_${selection.SpecialBetValueId}_${selection.PlayerId || 0}_${selection.TeamId || 0}`] : { MarketName: '', OddNameFromTemplate: '' } } }">
                                                <div class="text-sm leading-none">
                                                    <span x-text="eventLocalizedSelectionCollection().MarketName"></span> 
                                                    @*<span class="border border-indicator rounded-full px-1 ml-1 text-indicator text-xxxs align-middle" x-show="selection.IsLive">LIVE</span>*@
                                                    <svg version="1.1" x="0px" y="0px" viewBox="0 0 512 256" xml:space="preserve" xmlns="http://www.w3.org/2000/svg" xmlns:svg="http://www.w3.org/2000/svg" class="w-8 h-4 inline text-indicator" x-show="event.IsLive">
                                                        <path fill="none" stroke="currentColor" stroke-width="12" d="M 400.6,218.4 H 111.4 c -53.7,0 -97.2,-43.5 -97.2,-97.2 v 0 C 14.2,67.499999 57.7,24 111.4,24 h 289.3 c 53.7,0 97.2,43.499999 97.2,97.2 v 0 c -0.1,53.6 -43.6,97.2 -97.3,97.2 z" />
                                                        <path fill="currentColor" d="m 161.7,172.1 h -51.8 c -4.8,0 -8.7,-3.9 -8.7,-8.7 V 76.999999 c 0,-5 4.2,-8.9 9.2,-8.6 4.6,0.3 8.1,4.3 8.1,9 V 154.9 c 0,0 0,0 0,0 h 42.9 c 4.6,0 8.7,3.5 9,8.1 0.2,4.9 -3.8,9.1 -8.7,9.1 z m 43.2,-8.7 c 0,5 -4.2,8.9 -9.2,8.6 -4.6,-0.3 -8.1,-4.3 -8.1,-9 V 77.199999 c 0,-4.6 3.5,-8.7 8.1,-9 5,-0.3 9.2,3.7 9.2,8.6 z M 316.7,80.099999 282.1,166.6 c -1.3,3.3 -4.5,5.4 -8,5.4 -3.5,0 -6.7,-2.2 -8,-5.4 L 231.5,80.099999 c -1.8,-4.4 0.4,-9.5 4.8,-11.3 4.4,-1.8 9.5,0.4 11.3,4.8 L 274.1,139.9 c 0,0 0.1,0 0.1,0 l 26.5,-66.300001 c 0.3,-0.8 0.7,-1.5 1.2,-2.2 2.5,-3.2 6.6,-4.1 10,-2.7 2.1,0.9 3.8,2.5 4.7,4.6 1,2.3 1,4.7 0.1,6.8 z M 360.7,111.5 h 42.9 c 4.6,0 8.7,3.5 9,8.1 0.3,5 -3.7,9.2 -8.6,9.2 h -43.2 c 0,0 0,0 0,0 v 25.9 c 0,0 0,0 0,0 H 404 c 5,0 8.9,4.2 8.6,9.2 -0.3,4.6 -4.3,8.1 -9,8.1 H 352 c -4.8,0 -8.7,-3.9 -8.7,-8.7 V 76.899999 c 0,-4.8 3.9,-8.7 8.7,-8.7 h 51.8 c 5,0 8.9,4.2 8.6,9.2 -0.3,4.6 -4.3,8.1 -9,8.1 h -42.9 c 0,0 0,0 0,0 L 360.7,111.5 c -0.1,0 -0.1,0 0,0 z" />
                                                    </svg>
                                                    @* Auxiliary *@<span x-text="'['+selection.OddId+']'" class="text-xxxs text-light-200 ml-1"></span>@* /Auxiliary *@
                                                </div>
                                                <div>
                                                    <span x-text="eventLocalizedSelectionCollection().OddNameFromTemplate"></span>
                                                    <template x-if="event.Banker">
                                                        <span class="text-base text-brand-light font-bold">B</span>
                                                    </template>
                                                    @* Lost *@
                                                    <template x-if="eventSelection.Status === -1">
                                                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="inline w-4 h-4 text-indicator -mt-px">
                                                            <path fill-rule="evenodd" d="M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25zm-1.72 6.97a.75.75 0 10-1.06 1.06L10.94 12l-1.72 1.72a.75.75 0 101.06 1.06L12 13.06l1.72 1.72a.75.75 0 101.06-1.06L13.06 12l1.72-1.72a.75.75 0 10-1.06-1.06L12 10.94l-1.72-1.72z" clip-rule="evenodd" />
                                                        </svg>
                                                    </template>
                                                    @* Won *@
                                                    <template x-if="eventSelection.Status === 1">
                                                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="inline w-4 h-4 text-success">
                                                            <path fill-rule="evenodd" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12zm13.36-1.814a.75.75 0 10-1.22-.872l-3.236 4.53L9.53 12.22a.75.75 0 00-1.06 1.06l2.25 2.25a.75.75 0 001.14-.094l3.75-5.25z" clip-rule="evenodd" />
                                                        </svg>
                                                    </template>
                                                    @* Void *@
                                                    <template x-if="eventSelection.Status === -2">
                                                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="inline w-4 h-4 text-brand-light -mt-px">
                                                            <path fill-rule="evenodd" d="M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25zm3 10.5a.75.75 0 000-1.5H9a.75.75 0 000 1.5h6z" clip-rule="evenodd" />
                                                        </svg>
                                                    </template>
                                                </div>
                                                <template x-if="betView.BetSlip.RealBets.some(abet => abet.BetStatus != 0 && abet.BetStatus != 100)">
                                                    <div class="text-xs text-light-400" x-html="event.ResultsString"></div>
                                                </template>
                                            </div>
                                            </template>
                                            <div>
                                                <template x-if="!event.IsCustomBet">
                                                    <a class="inline-block min-w-16 leading-none bg-light-200 rounded-full px-4 py-3 text-sm text-brand-dark font-bold text-right" x-text="common.parse(selection.OddValue).output"></a>
                                                </template>
                                            </div>
                                        </div>
                                    </div>
                                </template>
                            </div>
                        </div>
                    </div>
                </template>
            </div>

            @* winning table *@
            <div class="text-brand-dark text-sm" x-data="{ 
                currency(){ return betView.BetSlip.RealBets[0].CurrencyId === 106 ? '&euro;' : ''; }, 
                combinations(){
                    var combs = '', bets = betView.BetSlip.RealBets.sort((a, b) => a.Id - b.Id), bet = bets[0];
                    console.log(bet.BetLines.some(l => l.IsCustomBetSelection === 1), [...new Set(bets.sort((a, b) => { return a.NumbComb - b.NumbComb }).map(k => k.NumOfSelectedLinesForCombination))], bet.NumOfBetlines, bet.BetLines.filter(l => l.IsCustomBetSelection !== 1), bet.CustomBetEvents);
                    if (bet.BetLines.some(l => l.IsCustomBetSelection === 1)) {
                        var totallines = bet.BetLines.filter(l => l.IsCustomBetSelection !== 1).length + bet.CustomBetEvents;
                        combs += totallines + ' Folds Of ' + totallines + ', ';
                    } else {
                        var ncom = [...new Set(bets.sort((a, b) => { return a.NumbComb - b.NumbComb }).map(k => k.NumOfSelectedLinesForCombination))];
                        ncom.forEach((l, i) =>
                        {
                            combs += l  + ' Folds Of ' + bet.NumOfBetlines + ', ';
                            combs += ncom.length > 1 ? '<br>' : '';
                        });
                    }
                    combs += bets.length + ' (' + bets.map(p => p.NumOfBetsCombined).reduce((a, b) => a + b, 0) + ')';
                    return combs;
                },
                bonus(){ return betView.BetSlip.RealBets.map(b => b.BonusAmount); },
                amountBet(){ return betView.BetSlip.RealBets.map(p => p.AmountBet).reduce((a, b) => a + b, 0); }, 
                AmountMinPossibleWinPerColumnWithLimit(){ return betView.BetSlip.IsFreeBet ? Math.min(...betView.BetSlip.RealBets.map(m => m.AmountMinPossibleWinPerColumnWithLimit))-this.amountBet() : Math.min(...betView.BetSlip.RealBets.map(m => m.AmountMinPossibleWinPerColumnWithLimit)); },
                AmountMaxPossibleWinPerColumnWithLimit(){ return betView.BetSlip.IsFreeBet ? Math.max(...betView.BetSlip.RealBets.map(m => m.AmountMinPossibleWinPerColumnWithLimit))-this.amountBet() : Math.max(...betView.BetSlip.RealBets.map(m => m.AmountMinPossibleWinPerColumnWithLimit)); },
                maxWin(){ return betView.BetSlip.IsFreeBet ? betView.BetSlip.RealBets.map(p => p.MaxWin).reduce((a, b) => a + b, 0)-this.amountBet() : betView.BetSlip.RealBets.map(p => p.MaxWin).reduce((a, b) => a + b, 0); }, 
                amountWin(){ return betView.BetSlip.IsFreeBet ? betView.BetSlip.RealBets.map(p => p.AmountWin).reduce((a, b) => a + b, 0)-this.amountBet() : betView.BetSlip.RealBets.map(p => p.AmountWin).reduce((a, b) => a + b, 0); }, 
                amountWinDisplay(){ return betView.BetSlip.RealBets.some(x => x.AmountWin > 0) || betView.BetSlip.RealBets.some(x => x.BetStatus == 10 || x.BetStatus == -20); }
                }">
                <div class="bg-light-100 rounded-t-2xl flex items-start p-2 pt-3 mb-px">
                    <div>Combinations</div>
                    <div class="ml-auto text-right" x-html="combinations()"></div>
                </div>
                <div class="bg-light-100 flex px-2 py-3 mb-px font-bold">
                    <div class="flex-grow flex items-center">
                        Amount 
                        <template x-if="betView.BetSlip.IsFreeBet">
                            <span class="text-brand font-bold inline-flex items-center">
                                <svg version="1.0" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 2229.000000 2229.000000" preserveAspectRatio="xMidYMid meet" class="inline w-5 h-5 ml-2 mr-1">
                                    <g transform="translate(0.000000,2229.000000) scale(0.100000,-0.100000)" fill="currentColor" stroke="none">
                                        <path d="M3315 19100 c-398 -39 -777 -266 -1002 -600 -36 -53 -111 -202 -141 -280 -34 -86 -60 -206 -72 -319 -14 -144 -14 -13518 0 -13662 33 -329 192 -640 436 -854 195 -170 394 -270 654 -327 l105 -23 7870 0 c7523 0 7874 1 7965 18 474 89 853 423 999 880 69 217 64 64 68 2119 l4 1858 -2933 3 -2933 2 -80 22 c-224 60 -398 171 -530 336 -108 135 -185 308 -204 459 -6 43 -11 1014 -13 2413 l-3 2340 22 85 c57 223 169 401 336 535 132 105 304 183 453 205 45 6 1106 10 2977 10 l2908 0 -4 1813 c-4 2005 1 1857 -68 2074 -145 453 -515 782 -989 880 -81 16 -491 17 -7915 19 -4307 1 -7866 -2 -7910 -6z m870 -3263 c121 -68 240 -135 265 -149 25 -14 135 -76 245 -138 110 -62 306 -172 435 -245 384 -217 985 -556 1295 -730 22 -12 162 -91 310 -175 233 -131 779 -438 855 -481 14 -7 41 -23 60 -35 19 -11 170 -97 335 -189 165 -92 316 -177 335 -188 19 -11 141 -79 270 -152 129 -72 253 -142 275 -155 163 -92 284 -160 298 -165 9 -4 46 15 94 48 43 29 184 125 313 212 129 87 316 213 415 280 99 67 284 191 410 277 127 85 306 206 399 269 93 63 293 197 445 300 359 241 977 658 1396 941 110 74 304 205 430 290 127 85 278 187 337 227 60 40 115 71 123 69 15 -3 -26 -66 -409 -632 -67 -98 -128 -189 -136 -202 -8 -13 -83 -124 -166 -246 -83 -123 -226 -335 -319 -473 -92 -137 -210 -311 -260 -385 -98 -144 -299 -442 -533 -790 -80 -118 -159 -235 -176 -260 -17 -25 -35 -53 -41 -62 -5 -9 -60 -90 -121 -180 -61 -90 -159 -235 -219 -323 -59 -88 -122 -180 -139 -205 -17 -25 -35 -53 -41 -62 -5 -9 -46 -70 -91 -135 -44 -65 -122 -180 -174 -256 l-93 -139 26 -51 c27 -54 55 -104 135 -242 25 -44 56 -98 68 -120 28 -50 280 -498 308 -546 12 -20 67 -119 124 -220 56 -101 114 -204 129 -229 38 -65 62 -108 93 -165 15 -27 75 -133 132 -235 57 -102 109 -194 115 -205 7 -11 28 -48 47 -81 20 -34 94 -165 164 -290 71 -126 137 -245 149 -264 20 -35 276 -490 318 -565 74 -134 290 -515 305 -540 10 -16 28 -48 40 -70 167 -299 264 -472 270 -480 4 -5 21 -35 38 -65 33 -60 280 -500 317 -565 114 -198 163 -290 159 -297 -8 -12 -37 -10 -59 6 -11 7 -45 27 -75 43 -59 32 -649 364 -715 403 -22 12 -130 73 -240 135 -110 61 -218 122 -240 135 -22 13 -58 33 -80 45 -22 12 -123 69 -225 127 -102 57 -225 127 -274 154 -48 27 -105 58 -125 70 -20 11 -149 84 -287 161 -138 78 -297 168 -355 201 -57 33 -196 111 -309 174 -335 188 -760 427 -832 469 -37 22 -212 121 -390 220 -178 100 -341 192 -363 204 -22 12 -148 83 -280 157 -275 155 -296 167 -348 198 -40 24 -58 22 -102 -14 -11 -9 -121 -84 -245 -168 -124 -83 -326 -219 -448 -302 -123 -83 -235 -158 -248 -166 -12 -8 -116 -78 -230 -155 -113 -77 -217 -147 -230 -155 -13 -8 -130 -87 -261 -176 -333 -224 -630 -425 -968 -652 -159 -108 -357 -241 -440 -297 -183 -124 -692 -467 -990 -667 -121 -81 -228 -148 -238 -148 -14 0 -7 16 35 75 29 41 64 93 78 115 27 42 268 401 471 698 68 101 128 191 134 200 5 9 19 31 31 47 27 40 211 310 416 615 91 135 212 315 270 400 57 85 180 268 273 405 93 138 228 338 300 445 72 107 221 328 330 490 109 162 223 331 254 375 31 44 61 87 66 97 6 10 67 102 138 207 l128 189 -35 58 c-30 52 -221 391 -282 499 -45 81 -287 511 -309 550 -58 101 -600 1064 -667 1185 -17 30 -34 60 -38 65 -7 8 -120 210 -225 400 -15 28 -43 77 -63 110 -19 33 -109 193 -199 355 -91 162 -169 300 -173 305 -4 6 -65 114 -135 240 -70 127 -131 235 -135 240 -4 6 -20 33 -36 60 -51 92 -342 611 -368 656 -12 20 -67 119 -124 220 -131 235 -136 243 -144 247 -16 7 -8 42 10 42 9 0 116 -56 237 -123z"/>
                                        <path d="M15303 13330 c-28 -4 -85 -18 -125 -30 -375 -114 -640 -430 -688 -820 -14 -120 -14 -2614 1 -2735 48 -394 336 -726 719 -827 l85 -23 2740 0 2740 0 85 22 c118 31 272 110 366 187 134 109 220 224 285 380 78 188 73 83 77 1566 3 1348 1 1437 -34 1575 -21 81 -94 233 -149 311 -128 179 -300 300 -530 371 l-90 28 -2715 1 c-1493 1 -2738 -2 -2767 -6z m1990 -1121 c222 -44 393 -136 565 -303 181 -176 286 -378 327 -629 45 -280 -19 -567 -184 -817 -87 -133 -278 -298 -436 -378 -137 -68 -332 -112 -500 -112 -314 0 -599 122 -817 348 -93 97 -136 159 -195 277 -90 180 -128 353 -120 545 6 148 28 249 82 382 59 148 123 246 233 360 154 159 330 263 529 314 184 46 327 50 516 13z"/>
                                    </g>
                                </svg>
                                Free Bet
                            </span>
                        </template>
                    </div>
                    <div class="ml-auto text-right" x-text="currency() + ' ' + common.parse(amountBet()).output"></div>
                </div>
                <div class="bg-light-100 flex p-2 mb-px">
                    <div>Min Col</div>
                    <div class="ml-auto text-right" x-text="currency() + ' ' + common.parse(AmountMinPossibleWinPerColumnWithLimit()).output"></div>
                </div>
                <div class="bg-light-100 flex p-2 mb-px">
                    <div>Max Col</div>
                    <div class="ml-auto text-right" x-text="currency() + ' ' + common.parse(AmountMaxPossibleWinPerColumnWithLimit()).output"></div>
                </div>
                <div class="bg-light-100 flex p-2 mb-px">
                    <div>Minimum bonus amount</div>
                    <div class="ml-auto text-right" x-text="currency() + ' ' + common.parse(Math.min(...bonus())).output"></div>
                </div>
                <div class="bg-light-100 flex p-2 mb-px">
                    <div>Maximum bonus amount</div>
                    <div class="ml-auto text-right" x-text="currency() + ' ' + common.parse(Math.max(...bonus())).output"></div>
                </div>
                <div class="bg-light-100 flex p-2 mb-px">
                    <div>Bonus Amount</div>
                    <div class="ml-auto text-right" x-text="currency() + ' ' + common.parse(bonus().reduce((partialSum, a) => partialSum + a, 0)).output"></div>
                </div>
                <div class="bg-light-200 flex px-2 py-3 font-bold" :class="{ 'rounded-b-2xl' : !amountWinDisplay() }">
                    <div>Possible Win:</div>
                    <div class="ml-auto text-right text-indicator" x-text="currency() + ' ' + common.parse(maxWin()).output"></div>
                </div>
                <template x-if="amountWinDisplay()">
                    <div class="bg-light-200 rounded-b-2xl flex px-2 py-3">
                        <div>
                            <span class="font-bold">Real Win</span>
                            <span x-text="betView.BetSlip.RealBets.some(x => x.CashOutStatus == 2) ? ' (Cashout) ' : ''"></span>
                            <span x-text="betView.BetSlip.RealBets.some(x => x.VoidAmount.HasValue) ? ' (Voided) ' : ''"></span>
                        </div>
                        <div class="ml-auto text-right font-bold text-indicator">
                            <span class="" x-text="currency() + ' ' + common.parse(amountWin()).output"></span>
                        </div>
                    </div>
                </template>
            </div>

        </div>
    </template>

    <partial name="_TestReceipt"/>

</div>